extends Node2D

var sprites = []
var spawnAreaHeight = 200
var gravity = 500.0  # Adjust this value to control the strength of gravity

func _ready():
    spawnSprite(Vector2(100, 100), Vector2(0, 0))

func _physics_process(delta):
    var to_remove = []
    for i in range(sprites.size()):
        var sprite = sprites[i]
        
        # Apply gravity by adjusting the Y position
        sprite.position.y += gravity * delta
        
        # Check for collisions with the ground (assuming you have a CollisionShape2D for the ground)
        var collision = sprite_is_colliding(sprite)
        
        if collision:
            # Stop the sprite when it collides with the ground
            sprite.position.y = collision.position.y - collision.shape.extents.y
            sprite.velocity = Vector2(0, 0)
        
        # Check if the sprite is below the screen, then mark it for removal
        if sprite.position.y > get_viewport_rect().size.y:
            to_remove.append(i)
    
    # Remove marked sprites from the list
    for i in to_remove.reversed():
        sprites[i].queue_free()

func spawnSprite(position, velocity):
    var newSprite = Sprite2D.new()
    newSprite.texture = preload("res://path_to_your_texture.png")
    add_child(newSprite)

    newSprite.position = position
    newSprite.velocity = velocity

    sprites.append(newSprite)

func sprite_is_colliding(sprite):
    # Check for collisions with the ground (assuming you have a CollisionShape2D for the ground)
    var ground = $Ground  # Replace 'Ground' with the name of your ground/hitbox node
    if ground.is_colliding(sprite.position):
        return ground
    
    return null
